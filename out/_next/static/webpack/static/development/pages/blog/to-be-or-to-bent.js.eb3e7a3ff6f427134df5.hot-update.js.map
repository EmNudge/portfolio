{"version":3,"file":"static/webpack/static\\development\\pages\\blog\\to-be-or-to-bent.js.eb3e7a3ff6f427134df5.hot-update.js","sources":["webpack:///./pages/blog/to-be-or-to-bent.mdx"],"sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import Layout from \"../../components/layouts/Blog\";\nexport const meta = {\n  published: true,\n  publishedAt: \"2019-07-18\",\n  title: \"To Be Or To Ben't - The Nonsense of Words\",\n  summary: \"A wannabe linguist's take on words\"\n};\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\" Layout={({children}) => <Layout title={meta.title}>{children}</Layout>} layoutProps={props} components={components}>\n\n\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`To be or to ben't? That is the question. Whether 'tis nobler in the mind to suffer The slings and arrows of outrageous fortune, Or to take arms against a sea of troubles, And, by opposing, end them?`}</MDXTag>\n<br /> - Shakespeare\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The more perspicacious of you might have noticed I took the liberty of slightly altering the first sentence of this famous quote from Shakespeare's Hamlet.`}</MDXTag>\n<br />\n<MDXTag name=\"p\" components={components}>{`While many might have thought the title of this article to be humorous, most probably also thought \"Ben't? That isn't a word!\"`}</MDXTag>\n<br />\n<MDXTag name=\"p\" components={components}>{`The cool part about this, is that these same people most likely knew exactly what I meant. It's written like a grammatical contraction. We know about contractions. We use words like \"haven't\" and \"isn't\" to mean the words \"cannot\" and \"is not\" respectively. We know contractions shorten and/or group words togethor. We know contractions like these are a grouping of one word plus the word \"not\".`}</MDXTag>\n<br />\n<MDXTag name=\"p\" components={components}>{`We assume the word \"ben't\" is a contraction of \"be not\". We're dealing with Shakespear here, so it's probably fine to reverse it - \"not be\". It's valid enough, I'd say. Why is most people's first instinct to reject it?`}</MDXTag>\n<br />\n<MDXTag name=\"p\" components={components}>{`Critics might retort with \"Well, you can't just make up words!\" which is rather amusing, because we make up words all the time. In fact, the very word \"critic\" was made up by Shakespear.`}</MDXTag>\n<br />\n<MDXTag name=\"p\" components={components}><MDXTag name=\"img\" components={components} parentName=\"p\" props={{\"src\":\"https://contenthub-static.grammarly.com/blog/wp-content/uploads/2014/04/blog63.jpg\",\"alt\":\"Grammarly's writeup on Shakespeare's words\"}}></MDXTag><MDXTag name=\"br\" components={components} parentName=\"p\"></MDXTag>\n<a href=\"https://www.grammarly.com/blog/15-words-invented-by-shakespeare/\" className=\"image-label\">{`Grammarly's writeup on Shakespeare's words`}</a></MDXTag>\n<br />\n<MDXTag name=\"p\" components={components}>{`People will often point to the dictionary when trying to verify the authenticity of words. \"Prophesize\", a word I grew up hearing a lot, is not an actual word. The \"grammatically correct\" term is \"prophesy\". Looking at most dictionaries and resources, online or physical, will tell you the same. But it just feels so... wrong. `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.merriam-webster.com/dictionary/prophesize\"}}>{`Miriam Webster`}</MDXTag>{` actually happens to have an entry, but mentions people quoting wrongly translated bible/testament verses.`}</MDXTag>\n<br /></MDXTag>\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBA;;;;A","sourceRoot":""}