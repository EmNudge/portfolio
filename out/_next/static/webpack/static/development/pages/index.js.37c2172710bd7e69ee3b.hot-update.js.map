{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.37c2172710bd7e69ee3b.hot-update.js","sources":["webpack:///./components/Header/index.js"],"sourcesContent":["import Logo from \"../../static/logo.svg\";\r\nimport Link from \"next/Link\";\r\nimport HamburgerIcon from \"./hamburger-icon\";\r\nimport \"./index.scss\";\r\n\r\nconst Header = ({currentRoute}) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  let drawer = React.createRef();\r\n\r\n  const setScrollTo = enable => {\r\n    document.querySelector(\"body\").style.overflow = enable ? \"\" : \"hidden\";\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setScrollTo(!isOpen);\r\n    return () => setScrollTo(true);\r\n  }, [isOpen]);\r\n\r\n  const pages = [\r\n    {route: \"/\", title: \"About\"},\r\n    {route: \"/projects\", title: \"Projects\"},\r\n    {route: \"/blog\", title: \"Blog\"}\r\n  ];\r\n\r\n  const isRoute = route => {\r\n    const dirs = route.split(\"/\").slice(1);\r\n    const currentDirs = currentRoute.split(\"/\").slice(1);\r\n    return dirs.some(dir => currentDirs.some(currentDir => currentDir === dir));\r\n  };\r\n\r\n  const pressOutside = e => {\r\n    if (!drawer.current) return;\r\n    if (drawer.current.contains(e.target)) return;\r\n    if (isOpen) setIsOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener(\"mousedown\", pressOutside, false);\r\n    document.addEventListener(\"touchstart\", pressOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", pressOutside, false);\r\n      document.removeEventListener(\"touchend\", pressOutside, false);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <header className=\"main-header\">\r\n      <Link href=\"/\">\r\n        <a className=\"logo\">\r\n          <Logo />\r\n        </a>\r\n      </Link>\r\n      <nav>\r\n        <div ref={drawer} className={\"drawer\" + (isOpen ? \"\" : \" closed\")}>\r\n          {pages.map(page => (\r\n            <Link href={page.route} key={page.title}>\r\n              <a className={isRoute(page.route) ? \"selected\" : \"\"}>\r\n                {page.title}\r\n              </a>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n        <HamburgerIcon isOpen={isOpen} onClick={() => setIsOpen(!isOpen)} />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}