{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.39b5e38642d9378f1ab6.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from \"../components/layouts/Main\";\r\nimport Console from \"../static/console.svg\";\r\nimport Waveform from \"../static/waveform.svg\";\r\nimport codingLinks from \"../data/coding-links\";\r\nimport \"./index.scss\";\r\n\r\nconst Index = () => {\r\n  const info = {\r\n    name: \"Calvin Kipperman\",\r\n    position: \"Fullstack Web Developer\",\r\n    langs: [\"Javascript\", \"Typescript\", \"Rust\"],\r\n    software: [\"Adobe Suite\", \"G Suite\"],\r\n    passions: [\"coding\", \"acting\"]\r\n  };\r\n\r\n  return (\r\n    <Layout title=\"Calvin Kipperman\" subtitle=\"Web Developer\">\r\n      <div className=\"block\">\r\n        <div className=\"console\">\r\n          <div className=\"svg\">\r\n            <Console />\r\n          </div>\r\n          <p>Calvins-Website:~ guest$ info</p>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>KEY</td>\r\n                <td>VALUE</td>\r\n              </tr>\r\n              {Object.keys(info).map(key => (\r\n                <tr key={key}>\r\n                  <td>{key}</td>\r\n                  <td>{JSON.stringify(info[key])}</td>\r\n                </tr>\r\n              ))}\r\n              <tr>\r\n                <td>hobbies</td>\r\n                <td>this.passions</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <p>\r\n            Calvins-Website:~ guest$ info <span className=\"cursor\" />\r\n          </p>\r\n        </div>\r\n        <div className=\"developing\">\r\n          <h1>Developing</h1>\r\n          <p>\r\n            My name is Calvin Kipperman. I am a fullstack web developer with a\r\n            strong UI background.\r\n          </p>\r\n          <p>\r\n            I develop complex and beautiful web and native applications with\r\n            React, React Native, Vue, and Vanilla JS.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"jumbotron\">\r\n        <div className=\"block\">\r\n          <div className=\"voice-acting\">\r\n            <h1>Voice Acting</h1>\r\n            <p>\r\n              Aside from developing, I do voice work for videogames, animations,\r\n              and commercials. No, seriously, I have an{\" \"}\r\n              <a\r\n                className=\"normal\"\r\n                href=\"https://www.imdb.com/name/nm10664016/\">\r\n                IMDb page\r\n              </a>\r\n              .\r\n            </p>\r\n            <p>\r\n              If you want to read more about that, you can head over to my voice\r\n              work website,{\" \"}\r\n              <a className=\"normal\" href=\"https://emnudge.com\">\r\n                https://emnudge.com\r\n              </a>\r\n              .\r\n            </p>\r\n          </div>\r\n          <div className=\"waveform\">\r\n            <div className=\"svg\">\r\n              <Waveform />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"block code-links\">\r\n        <h1>Coding Links</h1>\r\n        <div className=\"dummy-container\">\r\n          <div className=\"dummy-el\" />\r\n          <ul>\r\n            {codingLinks.map(({Icon, name, user, url}) => (\r\n              <li key={name}>\r\n                <a href={url}>\r\n                  <div>\r\n                    <Icon />\r\n                  </div>\r\n                  <div>\r\n                    <h2>{name}</h2>\r\n                    <h3>{user}</h3>\r\n                  </div>\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"dummy-el\" />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}