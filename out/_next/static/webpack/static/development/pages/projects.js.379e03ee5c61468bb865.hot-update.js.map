{"version":3,"file":"static/webpack/static\\development\\pages\\projects.js.379e03ee5c61468bb865.hot-update.js","sources":["webpack:///./components/Searchbox/index.js"],"sourcesContent":["import \"./index.scss\";\r\n\r\nconst Searchbox = ({tags, addedTags, onChange}) => {\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [isFocused, setIsFocues] = React.useState(false);\r\n  let searchContainer = React.useRef();\r\n\r\n  const getTags = () =>\r\n    tags.filter(\r\n      tag =>\r\n        tag.toUpperCase().includes(search.toUpperCase()) &&\r\n        !addedTags.includes(tag)\r\n    );\r\n\r\n  const getAddedTags = () => {\r\n    const width = searchContainer.current\r\n      ? searchContainer.current.clientWidth\r\n      : 600;\r\n    return addedTags.slice(0, width > 500 ? 3 : 2);\r\n  };\r\n  const getLeftoverTagNum = () => {\r\n    const num = addedTags.length - getAddedTags().length;\r\n    if (num === 0) return <React.Fragment />;\r\n\r\n    return <span className=\"leftovers\">{num}</span>;\r\n  };\r\n\r\n  const addTag = tag => {\r\n    onChange([tag, ...addedTags]);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const removeTag = tag => {\r\n    onChange(addedTags.filter(addedTag => addedTag !== tag));\r\n  };\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.key === \"Enter\" && getTags()[0]) {\r\n      addTag(getTags()[0]);\r\n    } else if (e.key === \"Backspace\" && !search) {\r\n      removeTag(addedTags[addedTags.length - 1]);\r\n    }\r\n  };\r\n\r\n  const pressOutside = e => {\r\n    if (!searchContainer.current) return;\r\n    if (searchContainer.current.contains(e.target)) return;\r\n    setIsFocues(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log(searchContainer);\r\n    document.addEventListener(\"mousedown\", pressOutside, false);\r\n    document.addEventListener(\"touchstart\", pressOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", pressOutside, false);\r\n      document.removeEventListener(\"touchstart\", pressOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"search-container\"\r\n      ref={searchContainer}\r\n      onClick={() => setIsFocues(true)}>\r\n      <label htmlFor=\"search-box\">Search</label>\r\n      <div className=\"input-row\">\r\n        <input\r\n          id=\"search-box\"\r\n          type=\"text\"\r\n          placeholder=\"Start typing...\"\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n          onFocus={() => setIsFocues(true)}\r\n          onBlur={() => setIsFocues(false)}\r\n          onKeyDown={handleKeyDown}\r\n          autoComplete=\"off\"\r\n        />\r\n        <div className=\"added-tags\">\r\n          {getAddedTags().map(tag => (\r\n            <span key={tag}>\r\n              <span>{tag}</span>\r\n              <span className=\"remove-btn\" onClick={() => removeTag(tag)}>\r\n                <span>x</span>\r\n              </span>\r\n            </span>\r\n          ))}\r\n          {getLeftoverTagNum()}\r\n        </div>\r\n      </div>\r\n      <div className={\"tags-container\" + (isFocused ? \" open\" : \"\")}>\r\n        {getTags().map(tag => (\r\n          <div onClick={() => addTag(tag)} key={tag}>\r\n            {tag}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Searchbox;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAFA;AACA;AAMA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;AACA;AAAA;;;;A","sourceRoot":""}